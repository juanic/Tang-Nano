//
//Written by GowinSynthesis
//Product Version "GowinSynthesis V1.9.7.01Beta"
//Thu Jan 07 14:34:10 2021

//Source file index table:
//file0 "\D:/Documentos/REPOS/Github/Tang-Nano/tutorials/Obijuan_open_FPGA/T10-shif-register/src/T10-shif-register.v"
//file1 "\D:/Documentos/REPOS/Github/Tang-Nano/tutorials/Obijuan_open_FPGA/T10-shif-register/src/T05-prescaler.v"
`timescale 100 ps/100 ps
module prescaler (
  clk_d,
  clk_pres
)
;
input clk_d;
output clk_pres;
wire n29_1;
wire n29_0_COUT;
wire n28_1;
wire n28_0_COUT;
wire n27_1;
wire n27_0_COUT;
wire n26_1;
wire n26_0_COUT;
wire n25_1;
wire n25_0_COUT;
wire n24_1;
wire n24_0_COUT;
wire n23_1;
wire n23_0_COUT;
wire n22_1;
wire n22_0_COUT;
wire n21_1;
wire n21_0_COUT;
wire n20_1;
wire n20_0_COUT;
wire n19_1;
wire n19_0_COUT;
wire n18_1;
wire n18_0_COUT;
wire n17_1;
wire n17_0_COUT;
wire n16_1;
wire n16_0_COUT;
wire n15_1;
wire n15_0_COUT;
wire n14_1;
wire n14_0_COUT;
wire n13_1;
wire n13_0_COUT;
wire n12_1;
wire n12_0_COUT;
wire n11_1;
wire n11_0_COUT;
wire n10_1;
wire n10_0_COUT;
wire n9_1;
wire n9_0_COUT;
wire n8_1;
wire n8_0_COUT;
wire n7_1;
wire n7_0_COUT;
wire n30_5;
wire [22:0] count;
wire VCC;
wire GND;
  DFF count_22_s0 (
    .Q(count[22]),
    .D(n8_1),
    .CLK(clk_d) 
);
defparam count_22_s0.INIT=1'b0;
  DFF count_21_s0 (
    .Q(count[21]),
    .D(n9_1),
    .CLK(clk_d) 
);
defparam count_21_s0.INIT=1'b0;
  DFF count_20_s0 (
    .Q(count[20]),
    .D(n10_1),
    .CLK(clk_d) 
);
defparam count_20_s0.INIT=1'b0;
  DFF count_19_s0 (
    .Q(count[19]),
    .D(n11_1),
    .CLK(clk_d) 
);
defparam count_19_s0.INIT=1'b0;
  DFF count_18_s0 (
    .Q(count[18]),
    .D(n12_1),
    .CLK(clk_d) 
);
defparam count_18_s0.INIT=1'b0;
  DFF count_17_s0 (
    .Q(count[17]),
    .D(n13_1),
    .CLK(clk_d) 
);
defparam count_17_s0.INIT=1'b0;
  DFF count_16_s0 (
    .Q(count[16]),
    .D(n14_1),
    .CLK(clk_d) 
);
defparam count_16_s0.INIT=1'b0;
  DFF count_15_s0 (
    .Q(count[15]),
    .D(n15_1),
    .CLK(clk_d) 
);
defparam count_15_s0.INIT=1'b0;
  DFF count_14_s0 (
    .Q(count[14]),
    .D(n16_1),
    .CLK(clk_d) 
);
defparam count_14_s0.INIT=1'b0;
  DFF count_13_s0 (
    .Q(count[13]),
    .D(n17_1),
    .CLK(clk_d) 
);
defparam count_13_s0.INIT=1'b0;
  DFF count_12_s0 (
    .Q(count[12]),
    .D(n18_1),
    .CLK(clk_d) 
);
defparam count_12_s0.INIT=1'b0;
  DFF count_11_s0 (
    .Q(count[11]),
    .D(n19_1),
    .CLK(clk_d) 
);
defparam count_11_s0.INIT=1'b0;
  DFF count_10_s0 (
    .Q(count[10]),
    .D(n20_1),
    .CLK(clk_d) 
);
defparam count_10_s0.INIT=1'b0;
  DFF count_9_s0 (
    .Q(count[9]),
    .D(n21_1),
    .CLK(clk_d) 
);
defparam count_9_s0.INIT=1'b0;
  DFF count_8_s0 (
    .Q(count[8]),
    .D(n22_1),
    .CLK(clk_d) 
);
defparam count_8_s0.INIT=1'b0;
  DFF count_7_s0 (
    .Q(count[7]),
    .D(n23_1),
    .CLK(clk_d) 
);
defparam count_7_s0.INIT=1'b0;
  DFF count_6_s0 (
    .Q(count[6]),
    .D(n24_1),
    .CLK(clk_d) 
);
defparam count_6_s0.INIT=1'b0;
  DFF count_5_s0 (
    .Q(count[5]),
    .D(n25_1),
    .CLK(clk_d) 
);
defparam count_5_s0.INIT=1'b0;
  DFF count_4_s0 (
    .Q(count[4]),
    .D(n26_1),
    .CLK(clk_d) 
);
defparam count_4_s0.INIT=1'b0;
  DFF count_3_s0 (
    .Q(count[3]),
    .D(n27_1),
    .CLK(clk_d) 
);
defparam count_3_s0.INIT=1'b0;
  DFF count_2_s0 (
    .Q(count[2]),
    .D(n28_1),
    .CLK(clk_d) 
);
defparam count_2_s0.INIT=1'b0;
  DFF count_1_s0 (
    .Q(count[1]),
    .D(n29_1),
    .CLK(clk_d) 
);
defparam count_1_s0.INIT=1'b0;
  DFF count_0_s0 (
    .Q(count[0]),
    .D(n30_5),
    .CLK(clk_d) 
);
defparam count_0_s0.INIT=1'b0;
  DFF count_23_s0 (
    .Q(clk_pres),
    .D(n7_1),
    .CLK(clk_d) 
);
defparam count_23_s0.INIT=1'b0;
  ALU n29_s (
    .SUM(n29_1),
    .COUT(n29_0_COUT),
    .I0(count[1]),
    .I1(GND),
    .I3(GND),
    .CIN(count[0]) 
);
defparam n29_s.ALU_MODE=0;
  ALU n28_s (
    .SUM(n28_1),
    .COUT(n28_0_COUT),
    .I0(count[2]),
    .I1(GND),
    .I3(GND),
    .CIN(n29_0_COUT) 
);
defparam n28_s.ALU_MODE=0;
  ALU n27_s (
    .SUM(n27_1),
    .COUT(n27_0_COUT),
    .I0(count[3]),
    .I1(GND),
    .I3(GND),
    .CIN(n28_0_COUT) 
);
defparam n27_s.ALU_MODE=0;
  ALU n26_s (
    .SUM(n26_1),
    .COUT(n26_0_COUT),
    .I0(count[4]),
    .I1(GND),
    .I3(GND),
    .CIN(n27_0_COUT) 
);
defparam n26_s.ALU_MODE=0;
  ALU n25_s (
    .SUM(n25_1),
    .COUT(n25_0_COUT),
    .I0(count[5]),
    .I1(GND),
    .I3(GND),
    .CIN(n26_0_COUT) 
);
defparam n25_s.ALU_MODE=0;
  ALU n24_s (
    .SUM(n24_1),
    .COUT(n24_0_COUT),
    .I0(count[6]),
    .I1(GND),
    .I3(GND),
    .CIN(n25_0_COUT) 
);
defparam n24_s.ALU_MODE=0;
  ALU n23_s (
    .SUM(n23_1),
    .COUT(n23_0_COUT),
    .I0(count[7]),
    .I1(GND),
    .I3(GND),
    .CIN(n24_0_COUT) 
);
defparam n23_s.ALU_MODE=0;
  ALU n22_s (
    .SUM(n22_1),
    .COUT(n22_0_COUT),
    .I0(count[8]),
    .I1(GND),
    .I3(GND),
    .CIN(n23_0_COUT) 
);
defparam n22_s.ALU_MODE=0;
  ALU n21_s (
    .SUM(n21_1),
    .COUT(n21_0_COUT),
    .I0(count[9]),
    .I1(GND),
    .I3(GND),
    .CIN(n22_0_COUT) 
);
defparam n21_s.ALU_MODE=0;
  ALU n20_s (
    .SUM(n20_1),
    .COUT(n20_0_COUT),
    .I0(count[10]),
    .I1(GND),
    .I3(GND),
    .CIN(n21_0_COUT) 
);
defparam n20_s.ALU_MODE=0;
  ALU n19_s (
    .SUM(n19_1),
    .COUT(n19_0_COUT),
    .I0(count[11]),
    .I1(GND),
    .I3(GND),
    .CIN(n20_0_COUT) 
);
defparam n19_s.ALU_MODE=0;
  ALU n18_s (
    .SUM(n18_1),
    .COUT(n18_0_COUT),
    .I0(count[12]),
    .I1(GND),
    .I3(GND),
    .CIN(n19_0_COUT) 
);
defparam n18_s.ALU_MODE=0;
  ALU n17_s (
    .SUM(n17_1),
    .COUT(n17_0_COUT),
    .I0(count[13]),
    .I1(GND),
    .I3(GND),
    .CIN(n18_0_COUT) 
);
defparam n17_s.ALU_MODE=0;
  ALU n16_s (
    .SUM(n16_1),
    .COUT(n16_0_COUT),
    .I0(count[14]),
    .I1(GND),
    .I3(GND),
    .CIN(n17_0_COUT) 
);
defparam n16_s.ALU_MODE=0;
  ALU n15_s (
    .SUM(n15_1),
    .COUT(n15_0_COUT),
    .I0(count[15]),
    .I1(GND),
    .I3(GND),
    .CIN(n16_0_COUT) 
);
defparam n15_s.ALU_MODE=0;
  ALU n14_s (
    .SUM(n14_1),
    .COUT(n14_0_COUT),
    .I0(count[16]),
    .I1(GND),
    .I3(GND),
    .CIN(n15_0_COUT) 
);
defparam n14_s.ALU_MODE=0;
  ALU n13_s (
    .SUM(n13_1),
    .COUT(n13_0_COUT),
    .I0(count[17]),
    .I1(GND),
    .I3(GND),
    .CIN(n14_0_COUT) 
);
defparam n13_s.ALU_MODE=0;
  ALU n12_s (
    .SUM(n12_1),
    .COUT(n12_0_COUT),
    .I0(count[18]),
    .I1(GND),
    .I3(GND),
    .CIN(n13_0_COUT) 
);
defparam n12_s.ALU_MODE=0;
  ALU n11_s (
    .SUM(n11_1),
    .COUT(n11_0_COUT),
    .I0(count[19]),
    .I1(GND),
    .I3(GND),
    .CIN(n12_0_COUT) 
);
defparam n11_s.ALU_MODE=0;
  ALU n10_s (
    .SUM(n10_1),
    .COUT(n10_0_COUT),
    .I0(count[20]),
    .I1(GND),
    .I3(GND),
    .CIN(n11_0_COUT) 
);
defparam n10_s.ALU_MODE=0;
  ALU n9_s (
    .SUM(n9_1),
    .COUT(n9_0_COUT),
    .I0(count[21]),
    .I1(GND),
    .I3(GND),
    .CIN(n10_0_COUT) 
);
defparam n9_s.ALU_MODE=0;
  ALU n8_s (
    .SUM(n8_1),
    .COUT(n8_0_COUT),
    .I0(count[22]),
    .I1(GND),
    .I3(GND),
    .CIN(n9_0_COUT) 
);
defparam n8_s.ALU_MODE=0;
  ALU n7_s (
    .SUM(n7_1),
    .COUT(n7_0_COUT),
    .I0(clk_pres),
    .I1(GND),
    .I3(GND),
    .CIN(n8_0_COUT) 
);
defparam n7_s.ALU_MODE=0;
  INV n30_s2 (
    .O(n30_5),
    .I(count[0]) 
);
  VCC VCC_cZ (
    .V(VCC)
);
  GND GND_cZ (
    .G(GND)
);
endmodule /* prescaler */
module shift4 (
  clk,
  data
)
;
input clk;
output [3:0] data;
wire clk_d;
wire load_shift;
wire n9_6;
wire clk_pres;
wire [3:0] data_d;
wire VCC;
wire GND;
  IBUF clk_ibuf (
    .O(clk_d),
    .I(clk) 
);
  OBUF data_0_obuf (
    .O(data[0]),
    .I(data_d[0]) 
);
  OBUF data_1_obuf (
    .O(data[1]),
    .I(data_d[1]) 
);
  OBUF data_2_obuf (
    .O(data[2]),
    .I(data_d[2]) 
);
  OBUF data_3_obuf (
    .O(data[3]),
    .I(data_d[3]) 
);
  DFFR data_3_s2 (
    .Q(data_d[3]),
    .D(data_d[2]),
    .CLK(clk_pres),
    .RESET(n9_6) 
);
  DFFS data_2_s1 (
    .Q(data_d[2]),
    .D(data_d[1]),
    .CLK(clk_pres),
    .SET(n9_6) 
);
  DFFS data_1_s1 (
    .Q(data_d[1]),
    .D(data_d[0]),
    .CLK(clk_pres),
    .SET(n9_6) 
);
  DFFS data_0_s1 (
    .Q(data_d[0]),
    .D(data_d[3]),
    .CLK(clk_pres),
    .SET(n9_6) 
);
  DFF load_shift_s0 (
    .Q(load_shift),
    .D(VCC),
    .CLK(clk_pres) 
);
defparam load_shift_s0.INIT=1'b0;
  INV n9_s2 (
    .O(n9_6),
    .I(load_shift) 
);
  prescaler pres1 (
    .clk_d(clk_d),
    .clk_pres(clk_pres)
);
  VCC VCC_cZ (
    .V(VCC)
);
  GND GND_cZ (
    .G(GND)
);
  GSR GSR (
    .GSRI(VCC) 
);
endmodule /* shift4 */
